server:
  port: 0 # ноль - случайный пустой порт

spring:
  application:
    name: first-service
  config:
    import: "configserver:"
  cloud:
    config:
      fail-fast: true
      discovery:
        enabled: true
        service-id: config-server
      retry:
        useRandomPolicy: true
        max-interval: 6000

eureka:
  instance:
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    healthcheck:
      enabled: true
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname:localhost}:${eureka.instance.port:8761}/eureka/

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 3
        failureRateThreshold: 2
        waitDurationInOpenState: 10000
        enabled: true
    instances:
      default:
        slidingWindowSize: 3
        minimumNumberOfCalls: 2
        waitDurationInOpenState: 10s

management:
  endpoints:
    web:
      exposure:
        include: circuitbreakers

logging:
  level:
    root: INFO
    com.github.resilience4j: DEBUG
    org.springframework.web: DEBUG

ribbon:
  eureka:
    enabled: true

feign:
  client:
    config:
      default:
        connectTimeout: 1000
        readTimeout: 1000